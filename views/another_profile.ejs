<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= profile.username %>'s Profile
    </title>
    <style>
        /* Existing styles */

        body {
            font-family: 'Arial', sans-serif;
            background-color: #F8F9FC;
            color: #333;
            margin: 0;
            padding: 0;
        }

        header {
            background-color: #27374D;
            padding: 15px 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            position: fixed;
            width: 100%;
            top: 0;
            left: 0;
            z-index: 1000;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        header .logo h1 {
            margin: 0;
            font-size: 2em;
            color: white;
        }

        header .navbar {
            padding-right: 2vw;
        }

        header a {
            color: white;
            text-decoration: none;
            font-weight: bold;
            margin: 0 15px;
            transition: color 0.3s ease;
        }

        header a:hover {
            color: #9DB2BF;
        }

        .container {
            margin-top: 100px;
            padding: 20px;
            display: flex;
            justify-content: center;
        }

        .profile {
            width: 80%;
            background-color: #E5E5E5;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .profileHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}

.actions-section {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 10px;
}

.actions-section p {
    margin: 0;
    font-weight: bold;
    color: #394867;
}

.chatButton {
    background-color: #394867;
    color: white;
    border: none;
    padding: 8px 15px;
    border-radius: 5px;
    text-decoration: none;
    text-align: center;
}

.chatButton:hover {
    background-color: #526D82;
}

.follow-section {
    display: flex;
    align-items: center;
    gap: 10px;
}

.follow-section button {
    background-color: #394867;
    color: white;
    border: none;
    padding: 8px 15px;
    border-radius: 5px;
    cursor: pointer;
}

.follow-section button:hover {
    background-color: #526D82;
}

.follow-section span {
    font-weight: bold;
    color: #27374D;
}


        .profileHeader img {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            border: 2px solid #9BA4B5;
        }

        .profileDetails {
    margin-left: 20px;
    flex: 1;
}
.follow-section {
    margin-top: 10px; /* Add some space between Invite and Follow sections */
    display: flex;
    align-items: center;
    gap: 10px;
}

.follow-section button {
    background-color: #394867;
    color: white;
    border: none;
    padding: 8px 15px;
    border-radius: 5px;
    cursor: pointer;
}

.follow-section button:hover {
    background-color: #526D82;
}

.follow-section span {
    font-weight: bold;
    color: #27374D;
}
        .profileDetails h1 {
            color: #212A3E;
            margin: 0 0 10px;
            font-size: 1.5em;
        }

        .profileDetails p {
            margin: 5px 0;
            color: #394867;
        }

        .skills {
            margin-bottom: 20px;
        }

        .skills h3 {
            color: #212A3E;
            margin-bottom: 10px;
        }

        .skillsRow {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }

        .skillItem {
            background-color: white;
            padding: 5px 15px;
            border: 1px solid #9BA4B5;
            border-radius: 5px;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .skillItem button {
            background: none;
            border: none;
            color: #394867;
            cursor: pointer;
        }

        .editProfile {
            background-color: #394867;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            float: right;
        }

        .editProfile:hover {
            background-color: #526D82;
        }

        .showcases {
            margin-top: 20px;
        }

        .showcases h3 {
            color: #212A3E;
            margin-bottom: 10px;
        }

        .showcaseGrid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 10px;
        }

        .showcaseGrid .showcaseItem {
            background-color: #F1F6F9;
            border: 1px solid #9BA4B5;
            padding: 10px;
            border-radius: 5px;
            text-align: center;
            min-height: 250px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .showcaseGrid .showcaseItem img {
            max-width: 100%;
            height: auto;
            margin-bottom: 10px;
        }

        .showcaseItem {
            background-color: #fff;
            padding: 10px;
            border: 1px solid #9BA4B5;
            border-radius: 5px;
            text-align: center;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .showcaseItem img {
            max-width: 100%;
            height: 120px;
            margin-bottom: 10px;
            object-fit: cover;
            border-radius: 5px;
        }

        .removeShowcase {
            background: none;
            border: none;
            color: #394867;
            cursor: pointer;
            font-size: 1.2em;
        }

        /* Updated Post Section */

        .posts {
            margin-top: 20px;
            color: #212A3E;
        }

        .postGrid {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            justify-content: flex-start;
        }

        .postItem {
            background-color: white;
            border: 1px solid #9BA4B5;
            color: #212A3E;
            padding: 10px;
            width: 300px;
            /* Adjust width based on the layout */
            height: auto;
            border-radius: 5px;
            position: relative;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        .postItem h4 {
            margin: 0;
            padding-bottom: 5px;
            font-size: 1.1em;
        }

        .postItem p {
            margin: 10px 0;
            flex-grow: 1;
        }

        .deletePost {
            position: absolute;
            bottom: 10px;
            right: 10px;
            background: none;
            border: none;
            color: #394867;
            cursor: pointer;
            font-size: 1.2em;
            transition: color 0.3s ease;
        }

        .deletePost:hover {
            color: #FF6B6B;
        }
    </style>
</head>

<body>
    <header>
        <div class="logo">
            <h1>SkillConnect</h1>
        </div>
        <div class="navbar">
            <a href="/">Home</a>
            <a href="/logout">Logout</a>
        </div>
    </header>

    <div class="container">
        <div class="profile">
            <div class="profileHeader">
                <img src="<%= profile.profile_photo || '/images/default_profile_photo.jpg' %>" alt="Profile Photo">
                
                <div class="profileDetails">
                    <h1><%= profile.username %></h1>
                    <p>Available for Work: <%= profile.availability %></p>
                    <p class="rating">Rating:
                        <% for (let i = 1; i <= 5; i++) { %>
                            <% if (i <= profile.rating) { %> ★ <% } else { %> ☆ <% } %>
                        <% } %>
                    </p>
                </div>
            
                <div class="actions-section">
                    <% if (profile.user_id === user.user_id) { %>
                        <!-- No actions for own profile -->
                    <% } else if (profile.invitations.length > 0) { %>
                        <% if (profile.invitations[0].status === 'pending') { %>
                            <p>Status: <strong>Pending</strong></p>
                            <button disabled>Invitation Sent</button>
                        <% } else if (profile.invitations[0].status === 'accepted') { %>
                            <p>Status: <strong>Accepted</strong></p>
                            <a href="/chat/<%= profile.user_id %>" class="chatButton">Chat</a>
                        <% } else { %>
                            <button data_user_id="<%= user.user_id %>" data_profile_id="<%= profile.user_id %>"
                                onclick="handleInviteClick(this)">Invite</button>
                        <% } %>
                    <% } else { %>
                        <button data_user_id="<%= user.user_id %>" data_profile_id="<%= profile.user_id %>"
                            onclick="handleInviteClick(this)">Invite</button>
                    <% } %>
            
                    <div class="follow-section">
                        <span>Followers: <%= profile.followerCount %></span>
                        <button id="followButton" class="follow-btn">
                            <%= profile.isFollowing ? 'Following' : 'Follow' %>
                        </button>
                        
                    </div>
                </div>
            </div>
            
            

            <div class="skills">
                <h3>Skills</h3>
                <div class="skillsRow">
                    <% if (profile.skills.length> 0) { %>
                        <% profile.skills.forEach(skill=> { %>
                            <div class="skillItem">
                                <span>
                                    <%= skill.skill_name %>
                                </span>
                            </div>
                            <% }) %>
                                <% } else { %>
                                    <p>No skills added yet.</p>
                                    <% } %>
                </div>
            </div>

            <div class="showcases">
                <h3>Showcases</h3>
                <div class="showcaseGrid">
                    <% if (profile.showcases.length> 0) { %>
                        <% profile.showcases.forEach(showcase=> { %>
                            <div class="showcaseItem">
                                <span>
                                    <%= showcase.title %>
                                </span>
                                <% if (showcase.image_url) { %>
                                    <img src="<%= showcase.image_url %>" alt="Showcase Image">
                                    <% } else { %>
                                        <p>No image available</p>
                                        <% } %>
                                            <div>
                                                <%= showcase.description %>
                                            </div>

                                            <% if (showcase.skills.length> 0) { %>
                                                <div class="skills">
                                                    <strong>Skills:</strong>
                                                    <ul>
                                                        <% showcase.skills.forEach(skill=> { %>
                                                            <li>
                                                                <%= skill.skill_name %>
                                                            </li>
                                                            <% }) %>
                                                    </ul>
                                                </div>
                                                <% } else { %>
                                                    <p>No skills associated with this showcase.</p>
                                                    <% } %>
                            </div>
                            <% }) %>
                                <% } else { %>
                                    <p>No showcases added yet.</p>
                                    <% } %>

                </div>
            </div>

            <div class="posts">
                <h3>Posts</h3>
                <div class="postGrid" id="postGrid">
                    <% if (profile.posts.length> 0) { %>
                        <% profile.posts.forEach(post=> { %>
                            <div class="postItem">
                                <h4>
                                    <%= post.title %>
                                </h4>
                                <p>
                                    <%= post.content %>
                                </p>

                                <% if (post.skills.length> 0) { %>
                                    <div class="skills">
                                        <strong>Skills:</strong>
                                        <ul>
                                            <% post.skills.forEach(skill=> { %>
                                                <li>
                                                    <%= skill.skill_name %>
                                                </li>
                                                <% }) %>
                                        </ul>
                                    </div>
                                    <% } else { %>
                                        <p>No skills associated with this post.</p>
                                        <% } %>
                            </div>
                            <% }) %>
                                <% } else { %>
                                    <p>No posts added yet.</p>
                                    <% } %>

                </div>
            </div>
        </div>
    </div>
    <script>
        document.getElementById('followButton').addEventListener('click', function() {
            // Disable button to prevent multiple clicks
            this.disabled = true;
            const userId = "<%= profile.user_id %>";
                const isFollowing = this.innerText.trim() === 'Following';
            const action = isFollowing ? 'unfollow' : 'follow';
    
            // Send a POST request to the server with the action (follow/unfollow) and the user ID
            fetch(`/follows/${action}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ userId }) // Send the userId of the profile being followed/unfollowed
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Toggle button text and update follower count on success
                    if (action === 'follow') {
                        this.innerText = 'Following';
                    } else {
                        this.innerText = 'Follow';
                    }
    
                    // Update follower count
                    const followerCountElement = document.querySelector('#followerCount'); // Use an ID for precise selection
                    if (followerCountElement) {
                        followerCountElement.innerText = `Followers: ${data.followerCount}`;
                     }
                } else {
                    // If follow/unfollow failed, show a message
                    alert(data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred. Please try again later.');
            })
            .finally(() => {
                // Re-enable the button after the request is done
                this.disabled = false;
            });
        });
        function handleInviteClick(buttonElement) {
            const userId = buttonElement.getAttribute('data_user_id');
            const profileId = buttonElement.getAttribute('data_profile_id');
            sendInvitation(userId, profileId, buttonElement);
        }
        async function sendInvitation(userId, profileId, buttonElement) {
            console.log("its mongi");
            console.log(userId);
            console.log(profileId);
            try {
                const response = await fetch('/invite', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ receiverId: profileId, senderId: userId })
                });
                const data = await response.json();

                if (response.ok) {
                    alert(data.message);
                    buttonElement.textContent = 'Pending';
                    buttonElement.disabled = true;
                    sendNotificationToReceiver(profileId, userId);
                } else {
                    alert('Failed to send invitation: ' + data.error || 'Unknown error');
                }
            } catch (error) {
                console.error('Error sending invitation:', error);
                alert('Failed to send invitation');
            }
        }


        async function sendNotificationToReceiver(receiverId, senderId) {
            try {
                const notificationResponse = await fetch('/send_notification', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ receiverId, senderId, message: `You have a new invitation from user ${senderId}` })
                });

                const notificationData = await notificationResponse.json();

                if (notificationResponse.ok) {
                    console.log('Notification sent:', notificationData.message);
                } else {
                    console.error('Failed to send notification:', notificationData.error || 'Unknown error');
                }
            } catch (error) {
                console.error('Error sending notification:', error);
            }
        }
    </script>
</body>